<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private '.messenger.handler_descriptor.PDdrsmA' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/messenger/Handler/HandlerDescriptor.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Handler/MessageHandlerInterface.php';
include_once $this->targetDirs[3].'/src/MessageHandler/AddPonkaToImageHandler.php';
include_once $this->targetDirs[3].'/src/Photo/PhotoPonkaficator.php';
include_once $this->targetDirs[3].'/vendor/intervention/image/src/Intervention/Image/ImageManager.php';

$a = ($this->services['doctrine.orm.default_entity_manager'] ?? $this->getDoctrine_Orm_DefaultEntityManagerService());

$b = new \App\MessageHandler\AddPonkaToImageHandler(($this->privates['App\\Photo\\PhotoFileManager'] ?? $this->load('getPhotoFileManagerService.php')), $a, new \App\Photo\PhotoPonkaficator($a, new \Intervention\Image\ImageManager(), ($this->privates['photo.filesystem'] ?? $this->load('getPhoto_FilesystemService.php'))), ($this->privates['App\\Repository\\ImagePostRepository'] ?? $this->load('getImagePostRepositoryService.php')));

$c = new \Symfony\Bridge\Monolog\Logger('app');
$c->pushProcessor(($this->privates['debug.log_processor'] ?? $this->getDebug_LogProcessorService()));
$c->useMicrosecondTimestamps(true);
$c->pushHandler(($this->privates['monolog.handler.console'] ?? ($this->privates['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, []))));
$c->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));
\Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass::configureLogger($c);

$b->setLogger($c);

return $this->privates['.messenger.handler_descriptor.PDdrsmA'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor($b, []);
