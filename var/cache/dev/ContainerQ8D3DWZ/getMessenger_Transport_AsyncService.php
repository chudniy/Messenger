<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'messenger.transport.async' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/Receiver/ReceiverInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/Sender/SenderInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/TransportInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/Serialization/SerializerInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/Serialization/PhpSerializer.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/TransportFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/messenger/Transport/TransportFactory.php';

return $this->privates['messenger.transport.async'] = (new \Symfony\Component\Messenger\Transport\TransportFactory(new RewindableGenerator(function () {
    yield 0 => ($this->privates['messenger.transport.amqp.factory'] ?? ($this->privates['messenger.transport.amqp.factory'] = new \Symfony\Component\Messenger\Transport\AmqpExt\AmqpTransportFactory()));
    yield 1 => ($this->privates['messenger.transport.redis.factory'] ?? ($this->privates['messenger.transport.redis.factory'] = new \Symfony\Component\Messenger\Transport\RedisExt\RedisTransportFactory()));
    yield 2 => ($this->privates['messenger.transport.sync.factory'] ?? $this->load('getMessenger_Transport_Sync_FactoryService.php'));
    yield 3 => ($this->privates['messenger.transport.in_memory.factory'] ?? ($this->privates['messenger.transport.in_memory.factory'] = new \Symfony\Component\Messenger\Transport\InMemoryTransportFactory()));
    yield 4 => ($this->privates['messenger.transport.doctrine.factory'] ?? $this->load('getMessenger_Transport_Doctrine_FactoryService.php'));
}, 5)))->createTransport($this->getEnv('MESSENGER_TRANSPORT_DSN'), [], new \Symfony\Component\Messenger\Transport\Serialization\PhpSerializer());
